#/bin/bash

#cron_start: start active containers from crontab with @reboot cron_start_only.sh <edjanger.properties paths>
export app_cron_start=false

#cron_build: build and start containers from crontab with @reboot cron_build_start.sh <edjanger.properties paths>
export app_cron_build=false

#docker_command:show docker command when edjanger commands are used
export app_docker_command=true

#image_name:image name
export app_image_name="pamtrak06/ubuntu14.04-apache2-python"

#build_path:path where is found Dockerfile and its dependencies
export app_build_path="build"

#build_file:name of the Dockerfile (Default is 'CURRENT PATH/Dockerfile')
export app_build_file="--file build/Dockerfile"

#container_name:container name
export app_container_name="ubuntu14.04-apache2-python"

#exposed_ports:exposed port
#export app_exposed_ports="-p <mapped exposed value for port 22>:22 -p <mapped exposed value for port 80>:80"
export app_exposed_ports="-p 80:80 -p 443:443"

#shared_volumes:shared volumes
#export app_shared_volumes="-v <host path: $PWD/volumes/[specific folder 1]>:<specific container path 1> -v $PWD/volumes/[specific folder 2]:<specific container path 2>"
export app_shared_volumes="-v \$PWD/volumes/html:/var/www/html -v \$PWD/volumes/logs:/var/logs/apache2"

#environment_variables:environnment variables
#export app_environment_variables="-e <variable name 1>=<value 1> -e <variable name 2>=<value 2>"
export app_environment_variables=""

#volumes_from:expose volumes from another container into current container
#export app_volumes_from="--volumes-from <container name with exposed volumes>"
export app_volumes_from=""

#linked_containers:linked container
#export app_linked_containers="--link <external container name>:<alias in container>"
export app_linked_containers=""
